#!/bin/bash

# -----------------------------------------------------------------------------
# Load environmental variables
# If you do not trust the path, configure below:
SYSTEM=`uname -s`
if [ "$SYSTEM" = Darwin ]
then
	source /etc/bashrc
	source /etc/profile
	source ${HOME}/.bash_profile
elif [ "$SYSTEM" = Linux ]
then
	source /etc/profile
	source /etc/bash.bashrc
	source ${HOME}/.bashrc
fi

SERVER=""
DATABASE=""
HOST=""
USER=""
PASSWD=""
OUTPUT=""
BACKUP_DIR="/kunden/homepages/24/d406245370/htdocs/backups"
DATE=$(date "+%Y-%m-%d_%H:%M:%S")

# -----------------------------------------------------------------------------
# Usage

USAGE="
\n
 Backup binary.\n
\n
 Name:\n
\t server_backup\n
\n
 Description:\n
\t create mysqldump file and tar.gz file from given server.\n
\n
Required arguments:\n
\t -s [-server]\n
\t\t Name of server directory\n
\n
\t -d [-database]\n
\t\t Name of database\n
\n
\t -h [-host]\n
\t\t Host of database\n
\n
\t -u [-user]\n
\t\t User of database\n
\n
\t -o [-out]\n
\t\t Core name of output file (mysql-gzip format)\n
\n
Optional arguments:\n
\t -p [-passwd]\n
\t\t Password of database\n
\n
\t -h [-help]\n
\n
Example:\n
\tserver_backup -s prod -d db535557881 -h db535557881.db.1and1.com -u dbo535557881 -p 123.qwe -o prod.db535557881
\n
 Author: Jose Manuel Rodriguez Carrasco\n
\n
"
# -----------------------------------------------------------------------------
# Get input parameters

while expr "//$1" : //- >/dev/null
do
	case "$1" in
		-s | -server )
			SERVER=$2
			shift
			;;
		-d | -database )
			DATABASE=$2
			shift
			;;
		-h | -host )
			HOST=$2
			shift
			;;
		-u | -user )
			USER=$2
			shift
			;;
		-p | -passwd )
        	PASSWD=$2
        	shift
			;;
		-o | -out )
        	OUTPUT=$2
        	shift
			;;
		-h | -help )
			echo -e $USAGE		
			exit
			;;
		* )
			echo Unknown option: "$1"
			echo -e $USAGE
			exit 1
			;;
	esac
	shift
done

if [ "${SERVER}" == "" ]; then
	echo You must specify a server!
	echo -e $USAGE
	exit 1
fi
if [ "${DATABASE}" == "" ]; then
	echo You must specify a database!
	echo -e $USAGE
	exit 1
fi
if [ "${HOST}" == "" ]; then
	echo You must specify a host!
	echo -e $USAGE
	exit 1
fi  
if [ "${USER}" == "" ]; then
	echo You must specify a user!
	echo -e $USAGE
	exit 1
fi  
if [ "${OUTPUT}" == "" ]; then
	echo You must specify a out file!
	echo -e $USAGE
	exit 1
fi  


# -----------------------------------------------------------------------------
# Optional var declarations

PASSWD_PARAMETERS=""
if [ "${PASSWD}" != "" ]; then
	PASSWD_PARAMETERS="-p${PASSWD}"
fi  


# -----------------------------------------------------------------------------
# Remove backup files older than 3 days 
echo "-- Remove backup files older than 3 days "
echo "find ${BACKUP_DIR} -maxdepth 1 -type f -mtime +3 -exec rm {} \;"
find ${BACKUP_DIR} -maxdepth 1 -type f -mtime +3 -exec rm {} \;
echo ""

# -----------------------------------------------------------------------------
# Create backup of server directory
echo "-- Create backup of server directory"
echo "cd ${SERVER} && tar -czf ${BACKUP_DIR}/${OUTPUT}.${DATE}.files.tar.gz *"
cd ${SERVER} && tar -czf ${BACKUP_DIR}/${OUTPUT}.${DATE}.files.tar.gz *
echo ""

# -----------------------------------------------------------------------------
# Create backup of database
echo "-- Create backup of database"
echo "mysqldump ${DATABASE} -h ${HOST} -u ${USER} ${PASSWD_PARAMETERS} --single-transaction --quick | gzip -9c > ${BACKUP_DIR}/${OUTPUT}.${DATE}.db.gz"
mysqldump ${DATABASE} -h ${HOST} -u ${USER} ${PASSWD_PARAMETERS} --single-transaction --quick | gzip -9c > ${BACKUP_DIR}/${OUTPUT}.${DATE}.db.gz
echo ""
